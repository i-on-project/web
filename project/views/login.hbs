<br>
<div id="showAllMethods" class="row justify-content-center">
	
    <div class="col-md-4">
		<h2 class="text-center">Bem-vinda(o) de volta!</h2><br><br>
		
		<div class="divSpacing">
			<h5>Métodos de autenticação disponíveis:</h5><br>

			{{#each this.data}}
					<a class="btn btn-outline-dark btn-lg" role="button" onclick=showSpecifiedMethod('{{this.type}}') id="{{this.type}}button"></a>
			{{/each}}

		</div>
    </div>
	
</div>


<script>

	/// Specific presentation for email authentication method
	const email = document.querySelector("#emailbutton");			
	email.innerHTML += '<i class="fa fa-envelope-o" aria-hidden="true"></i>  Email Institucional';

	function showSpecifiedMethod(type) {
        $('#showAllMethods').hide();
        $(`#${type}`).show();
    }

    function back(type) {
        $('#showAllMethods').show();
        $(`#${type}`).hide();
    }

</script>


<!-- If necessary, more presentations for authentication methods can be added here ... -->


<!-- Auth method : email -->

<div id="email" class="row justify-content-center" style="display:none">

    <div class="col-md-4">

        <h2 class="text-center">Iniciar sessão</h2><br>

        <form onsubmit="validateEmail(); return false;">

            <!-- Email -->
            <div class="form-group">
                <label class="col-form-labels">Email institucional:</label>
                <input type="text" class="form-control" id="emailValue" required aria-required="true"/>
				<div class="invalid-feedback">
					Insira um email válido.
				</div>
            </div>
            <p id="domains">Domínios disponíveis: </p>

            <!-- Submit button -->
            <div class="form-group">
                <button type="text" class="form-control btn btn-dark" id="submit-button">Iniciar sessão</button>
            </div>

            <!-- Back button -->
           <br><button type="button" onclick=back('email') class="btn btn-outline-dark" ><i class="fa fa-angle-double-left" aria-hidden="true"></i> Voltar às opções de autenticação</button>
            <!-- Div that will contain loading icon -->
            <div id="loading"></div>

        </form>
        
    </div>

    <!-- Script to submit email to web-auth-api and polling -->
	<script>

		const allowed_domains = [];

		{{#each data}}
			if('{{this.type}}' === 'email') {
				{{#each this.allowed_domains}}
					allowed_domains.push('{{this}}')
				{{/each}}
			}
		{{/each}}

		// Add domains to paragraph
		const domainsParagraph = document.querySelector("#domains");
		const text = document.createTextNode(allowed_domains.join(", "));
		domainsParagraph.appendChild(text);

		async function validateEmail() {

			// Extract email
			const userEmailElem = document.querySelector('#emailValue');
			const userEmail = userEmailElem.value;
			
			// Validate email
			if(!userEmail) return;

			if(!verifyConditions(userEmail, allowed_domains)) { 
				userEmailElem.classList.add("is-invalid");
				return;
			}

			// Email is valid
			if(userEmailElem.classList.contains("is-invalid")) userEmailElem.classList.remove("is-invalid");
			userEmailElem.classList.add("is-valid");

			await submit();
		}

		function verifyConditions(email) {

			function isBeingUsed(domain) {
				return email.endsWith(domain.substring(1));
			}

			// Check if one of the allowed domains is being used
			if(!allowed_domains.some(isBeingUsed)) return false;

			const re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
			return re.test(email);
		}

		async function submit() {

			// Deactivate button
			const button = document.querySelector('#submit-button');
			button.disabled = true;

			// Notificate the user that authentication is in progress
			const loading = document.querySelector("#loading");
			
			loading.innerHTML += 
			' <br><br> ' + 
			' <div class="row justify-content-center"> ' + 
				'<div class="divSpacing lds-roller" role="status"><div></div><div></div><div></div><div>' +
			'</div>'

			// Request to auth api to obtain auth_req_id and expiration
			const data = {
				'email' : document.querySelector('#emailValue').value
			};

			const response = await fetch("/auth-api/email", {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(data),
			});
			
			const authData = await response.json();
			
			const auth_req_id = authData.auth_req_id;
			let counter = authData.expires_in;
			const polling_uri = `/auth-api/${auth_req_id}/poll`

			// Polling loop
			const pollingLoop = setInterval(async () => {
				counter-=5;

				const pollingResponse = await fetch(polling_uri, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					}
				});

				if(pollingResponse.status === 200) {
					
					clearInterval(pollingLoop);

					setTimeout(async () => {
						loading.innerHTML = "<p>Autenticação realizada com sucesso!</p>"
						window.location.replace('/');
					}, 500)
					
				}

				if (counter === 0) {
					loading.innerHTML = "<p>Tempo para autenticação excedido!</p>"
					clearInterval(pollingLoop);
				}

			}, 5000);

		}

	</script>

</div>